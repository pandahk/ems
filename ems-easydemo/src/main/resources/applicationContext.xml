<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd  
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"
	default-lazy-init="false">
	<description>Spring公共配置 </description>
	<!-- <context:property-placeholder location="classpath:application.properties"/> -->

	
	<context:annotation-config />
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="cn.hongye.ems">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<aop:aspectj-autoproxy />
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="fileEncoding" value="utf-8" />
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>
	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="cn.hongye.ems" />
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<!-- <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>-->
			</props>
		</property>
	</bean>
	
	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL" />
		<property name="showSql" value="true" />
		<property name="generateDdl" value="true" />
		<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
	</bean>

	
		<!-- Spring Jpa 异常处理配置 -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"></bean>

	

	<!-- Spring Data Jpa配置 -->
	<jpa:repositories base-package="cn.hongye.ems"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />

	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	
	
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<!-- MySQL数据库驱动类 -->
		<property name="driverClass" value="${ems.driverClass}" />
		<!-- MySQL数据库连接url -->
		<property name="jdbcUrl"   value="${ems.jdbcUrl}" />
		<!--MySQL数据库的用户名 -->
		<property name="user" value="${ems.user}" />
		<!--MySQL数据库 密码 -->
		<property name="password" value="${ems.password}" />
		<!--连接池最小连接数 -->
		<property name="minPoolSize" value="${ems.minPoolSize}" />
		<!--连接池最大连接数 Default: 15 -->
		<property name="maxPoolSize" value="${ems.maxPoolSize}" />
		<!--初始化连接数（取值在minPoolSize与maxPoolSize之间 Default:3） -->
		<property name="initialPoolSize" value="${ems.initialPoolSize}" />
		<!--最大空闲时间（60秒内未使用则连接被丢弃，若为0则永不丢弃 Default:0） -->
		<property name="maxIdleTime" value="${ems.maxIdleTime}" />
		<!--当连接池中的连接耗尽时c3p0一次同时获取的连接数 Default:3 -->
		<property name="acquireIncrement" value="${ems.acquireIncrement}" />
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的 statements属于单个connection而不是整个连接池。 所以设置这个参数需要考虑到多方面 的因素。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default:0 -->
		<!-- <property name="maxStatements" value="${ems.maxStatements}" /> -->
		<!--每60秒检查所有连接池中的空闲连接 Default:0 -->
	<!-- 	<property name="idleConnectionTestPeriod" value="${ems.idleConnectionTestPeriod}" /> -->
		<!--定义在从数据库获取新连接失败后重复尝试的次数 Default:30 -->
		<!-- <property name="acquireRetryAttempts" value="${ems.acquireRetryAttempts}" /> -->
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。 如果设为true，那么在尝试 获取连接失败后该数据源将申明已断开并永久关闭。Default:false -->
		<!-- <property name="breakAfterAcquireFailure" value="${ems.breakAfterAcquireFailure}" /> -->
		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。 建议使用idleConnectionTestPeriod或automaticTestTable等方法来提升连接测试的性能。Default:false -->
		<!-- <property name="testConnectionOnCheckout" value="${ems.testConnectionOnCheckout}" /> -->
	</bean>
	



</beans>
